{"version":3,"sources":["components/Wrapper/index.js","components/NavBar/index.js","components/Employees/index.js","components/SearchForm/index.js","App.js","reportWebVitals.js","index.js"],"names":["Wrapper","props","className","children","NavBar","Employees","sortByName","newAllEmp","newSort","allEmp","currentSort","state","sort","a","b","name","first","toLowerCase","setState","employeeList","sortByPhone","phone","sortByEmail","email","sortByDOb","Moment","dob","date","format","onSortChangeName","event","onSortChangePhone","onSortChangeEmail","onSortChangeDob","this","locale","Table","striped","scope","disabled","type","onClick","map","empInfo","alt","src","picture","thumbnail","last","id","value","React","Component","SearchForm","employee","search","target","substr","filteredEmployees","filter","emp","indexOf","placeholder","onChange","updateSearch","bind","deleteValue","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7a512de9.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\"\n\nfunction Wrapper(props){\nreturn <div className=\"wrapper\">{props.children}</div>\n}\n\nexport default Wrapper;","import React from \"react\";\nimport \"./style.css\";\n\nfunction NavBar(props){\n    return (\n        <div className=\"navbar text-center container-fluid\">\n            <div className=\"navbar-brand h1 mb-0 text-center title\">Employee Directory</div>\n            <p className=\"text-center subtitle\"><small>Click ∧ / ∨ to filter by heading or use the search box to narrow your results</small></p>\n        </div>\n    )\n}\n\nexport default NavBar;","import React from \"react\";\nimport \"./style.css\"\nimport Table from \"react-bootstrap/table\"\nimport Moment from \"moment\";\n// import { render } from \"@testing-library/react\";\n\n\n\nclass Employees extends React.Component {\n    constructor(props){\n        super(props)\n        const { allEmp } = this.props\n        this.state = {\n            currentSort: \"keyboard_arrow_down\",\n            employeeList: allEmp,\n        }\n    }\n\n\n\n\n    sortByName = () => {\n        const { allEmp } = this.props\n        const { currentSort } = this.state\n\n        let newAllEmp;\n        let newSort;\n\n        if( currentSort === \"keyboard_arrow_down\"){\n            // eslint-disable-next-line\n            newAllEmp = allEmp.sort((a,b) => {if(a.name.first.toLowerCase() < b.name.first.toLowerCase()) return -1} )\n            newSort = \"keyboard_arrow_up\"\n        }else if(currentSort === \"keyboard_arrow_up\"){\n            // eslint-disable-next-line\n            newAllEmp = allEmp.sort((a,b) => {if(a.name.first.toLowerCase() > b.name.first.toLowerCase()) return -1} )\n            newSort = \"keyboard_arrow_down\"\n        }else{\n            newAllEmp = this.props.allEmp\n            newSort = \"sort\"\n            return 0\n        }\n\n        this.setState({\n            currentSort: newSort,\n            employeeList: newAllEmp,\n        })\n    }\n\n    sortByPhone = () => {\n        const { allEmp } = this.props\n        const { currentSort } = this.state\n\n        let newAllEmp;\n        let newSort;\n\n        if( currentSort === \"keyboard_arrow_down\"){\n            // eslint-disable-next-line\n            newAllEmp = allEmp.sort((a,b) => {if(a.phone < b.phone) return -1} )\n            newSort = \"keyboard_arrow_up\"\n        }else if(currentSort === \"keyboard_arrow_up\"){\n            // eslint-disable-next-line\n            newAllEmp = allEmp.sort((a,b) => {if(a.phone > b.phone) return -1} )\n            newSort = \"keyboard_arrow_down\"\n        }else{\n            newAllEmp = this.props.allEmp\n            newSort = \"keyboard_arrow_down\"\n            return 0\n        }\n\n        this.setState({\n            currentSort: newSort,\n            employeeList: newAllEmp,\n        })\n    }\n\n    sortByEmail = () => {\n        const { allEmp } = this.props\n        const { currentSort } = this.state\n\n        let newAllEmp;\n        let newSort;\n\n        if( currentSort === \"keyboard_arrow_down\"){\n            // eslint-disable-next-line\n            newAllEmp = allEmp.sort((a,b) => {if(a.email < b.email) return -1} )\n            newSort = \"keyboard_arrow_up\"\n        }else if(currentSort === \"keyboard_arrow_up\"){\n            // eslint-disable-next-line\n            newAllEmp = allEmp.sort((a,b) => {if(a.email > b.email) return -1} )\n            newSort = \"keyboard_arrow_down\"\n        }else{\n            newAllEmp = this.props.allEmp\n            newSort = \"sort\"\n            return 0\n        }\n\n        this.setState({\n            currentSort: newSort,\n            employeeList: newAllEmp,\n        })\n    }\n\n    sortByDOb = () => {\n        const { allEmp } = this.props\n        const { currentSort } = this.state\n\n        let newAllEmp;\n        let newSort;\n\n        if( currentSort === \"keyboard_arrow_down\"){\n            // eslint-disable-next-line\n            newAllEmp = allEmp.sort((a,b) => {if(Moment(a.dob.date).format(\"M/D/YYY\") < Moment(b.dob.date).format(\"M/D/YYY\")) return -1} )\n            newSort = \"keyboard_arrow_up\"\n        }else if(currentSort === \"keyboard_arrow_up\"){\n            // eslint-disable-next-line\n            newAllEmp = allEmp.sort((a,b) => {if(Moment(a.dob.date).format(\"M/D/YYY\") > Moment(b.dob.date).format(\"M/D/YYY\")) return -1} )\n            newSort = \"keyboard_arrow_down\"\n        }else{\n            newAllEmp = this.props.allEmp\n            newSort = \"sort\"\n            return 0\n        }\n\n        this.setState({\n            currentSort: newSort,\n            employeeList: newAllEmp,\n        })\n    }\n\n\n    \n    onSortChangeName = (event) => {\n        this.sortByName()\n    }\n\n    onSortChangePhone = (event) => {\n        this.sortByPhone()\n    }\n\n    onSortChangeEmail = (event) => {\n        this.sortByEmail()\n    }\n\n    onSortChangeDob = (event) => {\n        this.sortByDOb()\n    }\n\n          \n    render() {\n        const { allEmp } = this.props\n        const { currentSort } = this.state\n        \n\n\n\n\n\n\n\n        Moment.locale(\"en\")\n    return (\n        \n        <div className=\"table-responsive\">\n        <Table className=\"tableStyle text-center\" striped>\n                <thead>\n                    <tr>\n                    <th scope=\"col\">\n                        Image\n                    <button  className=\"btn text-left\" disabled>\n                    <i className=\"fas fa-user\" />\n                        </button>\n                        \n                    </th>\n                    <th scope=\"col\">\n                        Name\n                        <button type=\"button\" className=\"btn\"onClick={this.onSortChangeName} >\n                                <i className=\"material-icons\">\n                                {currentSort}\n                                </i>\n                        </button>\n                    </th>\n                    <th scope=\"col\">\n                        Phone\n                    </th>\n                    <th scope=\"col\">\n                        Email\n                        <button type=\"button\" className='btn' onClick={this.onSortChangeEmail} >\n                                <i className=\"material-icons\">\n                                {currentSort}\n                                </i>\n                        </button>\n                    </th>\n                    <th scope=\"col\">\n                        DOB\n                        <button type=\"button\" className='btn' onClick={this.onSortChangeDob} >\n                                <i className=\"material-icons\">\n                                {currentSort}\n                                </i>\n                        </button>\n                    </th>\n                    </tr>\n                </thead>\n    \n                <tbody>\n                    {allEmp.map(empInfo =>\n                    <tr key={empInfo.id.value}>\n                    <td><img alt={empInfo.name.first} src={empInfo.picture.thumbnail} className=\"img-fluid profPic\"/></td>\n                    <td>{empInfo.name.first} {empInfo.name.last}</td>\n                    <td>{empInfo.phone}</td>\n                    <td>{empInfo.email}</td>\n                    <td>{Moment(empInfo.dob.date).format(\"M/D/YYYY\")}</td>\n                    </tr>\n                    )}\n                </tbody>\n        </Table> \n        </div>\n    )\n    \n}\n}\n\nexport default Employees;","import React from \"react\";\nimport Employees from \"../Employees\"\nimport Moment from \"moment\";\nimport \"./style.css\"\nimport employee from \"../../employee.json\"\n// import { render } from \"@testing-library/react\";\n\n\n\n\nclass SearchForm extends React.Component {\n    constructor(props) {\n\n        super(props);\n        this.state = {\n            employee: employee,\n            search: \"\",\n        }      \n    }\n    \n\n    updateSearch(event) {\n        this.setState({search: event.target.value.substr(0,20)})\n    }\n\n\n    deleteValue(event){\n        this.setState({search: \"\"})\n    }\n\n\n    render(){\n        let filteredEmployees = this.state.employee.filter(emp => emp.name.first.toLowerCase().indexOf(this.state.search.toLowerCase()) !== -1 || emp.name.last.toLowerCase().indexOf(this.state.search.toLowerCase()) !== -1);\n\n        Moment.locale(\"en\")\n\n\n\n        \n        return (\n            <div className=\"container\">\n                <div className=\"row justify-content-sm-center\">\n                    <div className=\"col-sm-12 col-md-3 align-self-center\">\n                    <form className=\"text-center input-group\">\n                        <input type=\"text\" placeholder=\"Search\" name=\"searchField\" className=\"form-control\"value={this.state.search} onChange={this.updateSearch.bind(this)}/>\n                        <div className=\"input-group-append\">\n                            <span className=\"input-group-text\"type=\"button\" onClick={this.deleteValue.bind(this)}>x</span>\n                        </div>\n                    </form>\n                    </div>\n                </div>\n            <div className=\"row\">\n                <div className=\"col\">\n                \n                            <Employees\n                                allEmp={filteredEmployees} \n                            />\n                     \n                </div>\n            </div>\n\n        </div>\n\n        )\n        }\n\n}\n\n\nexport default SearchForm;","import React from \"react\";\nimport Wrapper from \"./components/Wrapper\";\nimport NavBar from \"./components/NavBar\";\nimport SearchForm from \"./components/SearchForm\";\n// import Employees from \"./components/Employees\";\nimport \"./App.css\";\n\n\nclass App extends React.Component {\n\n\n\n\n    render(){\n    \n    \n    return (\n        <Wrapper>\n            <NavBar/>\n            <SearchForm/>\n\n        </Wrapper>\n        )\n    }\n}\n\n\n\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}